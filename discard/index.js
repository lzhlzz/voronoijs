function import$(t,n){var r={}.hasOwnProperty;for(var e in n)r.call(n,e)&&(t[e]=n[e]);return t}function in$(t,n){for(var r=-1,e=n.length>>>0;++r<e;)if(t===n[r])return!0;return!1}var Aux,Convex;Aux={inner:function(t,n){return["x","y","z"].map(function(r){return t[r]*n[r]}).reduce(function(t,n){return t+n},0)},sub:function(t,n){var r;return r={},["x","y","z"].map(function(e){return r[e]=t[e]-n[e]}),r},cross:function(t,n){return{x:t.y*n.z-t.z*n.y,y:t.z*n.x-t.x*n.z,z:t.x*n.y-t.y*n.x}}},Convex=function(t,n){function r(t){return x.center[t]=[0,1,2,3].reduce(function(n,r){return n+x.pts[a[r]][t]},0)/4}function e(t){return t.map(function(t){return a[t]})}function i(t){return t.trivial}function o(t,n){var r;return r=Aux.sub(x.center,x.pts[t]),["x","y","z"].reduce(function(t,n){return t+Math.pow(r[n],2)},0),[r,n]}function u(t,n){return t[0]-n[0]}var s,a,c,h,f,l,p,x=this;if(this.pts=t,this.debug=n,this.polygons=[],this.faces.list=[],this.debug&&console.log("Create convex for point set ( length "+t.length+" )"),!(this.pts.length<4)){for(s=[[0,1,2,3],3],a=s[0],this.idx=s[1];this.idx<this.pts.length;){for(this.idx++,this.center={},["x","y","z"].map(r),h=[],f=0,l=(s=[[0,1,2],[0,1,3],[0,2,3],[1,2,3]].map(e)).length;l>f;++f)p=s[f],h.push(new Convex.face(this,p));if(c=h,!c.filter(i).length)break;p=a.map(o).sort(u)[0][1],a.splice(a.indexOf(p),1),a.push(this.idx)}return this.faces.add(c),c.forEach(function(t){return x.pts.forEach(function(n){return t.front(n)?x.setPair(t,n):void 0})}),this}},import$(Convex.prototype,{pair:{f2p:{},p2f:{}},getPair:function(t){return t instanceof Convex.face?this.pair.f2p[this.faces.list.indexOf(t)]||[]:this.pair.p2f[this.pts.indexOf(t)]||[]},setPair:function(t,n){var r,e,i;return((r=(i=this.pair).f2p||(i.f2p={}))[e=this.faces.list.indexOf(t)]||(r[e]=[])).push(n),((r=(i=this.pair).p2f||(i.p2f={}))[e=this.pts.indexOf(n)]||(r[e]=[])).push(t)},faces:{list:[],contain:function(t){return in$(t,this.list)},add:function(t){return Array.isArray(t)?this.list=this.list.concat(t):this.list.push(t)},remove:function(t){var n=this;return Array.isArray(t)||(t=[t]),t.forEach(function(t){var r;return r=n.list.indexOf(t),r>=0?n.list.splice(r,1):void 0})}},polygonReorder:function(t){var n,r,e,i;return n=t.reduce(function(t,n){return t+n.x},0)/t.length,r=t.reduce(function(t,n){return t+n.y},0)/t.length,e=Math.pow(n,2)+Math.pow(r,2),i=function(t){var i,o,u;return i=Math.sqrt(e*(Math.pow(t.x-n,2)+Math.pow(t.y-r,2))),o=Math.acos((-n*(t.x-n)-r*(t.y-r))/i),u=Math.acos((r*(t.x-n)-n*(t.y-r))/i),u>Math.PI/2&&(o=6.28-o),o},t.sort(function(t,n){return i(t)-i(n)})},grid:function(){function t(t,n){return t+n.x}function n(t,n){return t+n.y}var r,e,i,o,u,s,a,c,h,f,l,p,x,d,v,y;for(this.polygons=[],r=0,i=(e=this.pts).length;i>r;++r)o=e[r],o.visited=!1;for(u=[],r=0,i=(e=this.faces.list).length;i>r;++r)if(s=e[r],a=s.center(),s.front({x:a.x,y:a.y,z:-100}))for(c=0,f=(h=s.idx).length;f>c;++c)if(o=h[c],!in$(o,u)){for(u.push(o),l=[],l.idx=o,p=0,d=(x=this.faces.list).length;d>p;++p)v=p,y=x[p],a=y.center(),y.front({x:a.x,y:a.y,z:-100})&&in$(o,y.idx)&&l.push(y.dual());this.polygonReorder(l),l.cx=l.reduce(t,0)/l.length,l.cy=l.reduce(n,0)/l.length,this.pts[o].boundary&&(l.boundary=!0),this.polygons.push(l)}return console.log(this.pts.length,"vs",this.polygons.length)},calculate:function(){for(;this.idx<this.pts.length;)this.iterate();return this.grid()},iterate:function(){function t(t){return t.node[0]===h.node[0]&&t.node[1]===h.node[1]}function n(t){return t.dup=!0,t}var r,e,i,o,u,s,a,c,h,f,l,p,x=this;if(!(this.idx>=this.pts.length)){for(this.faces.list.map(function(t){return t.active=!1}),this.pts[this.idx].active=!0,r=this.getPair(this.pts[this.idx]),e=[],i=0,o=0,u=r.length;u>o;++o)if(s=r[o],this.faces.contain(s))for(a=0;3>a;++a)c=a,i++,h={dup:!1,node:[s.idx[c],s.idx[(c+1)%3]]},h.node[0]>h.node[1]&&h.node.reverse(),f=e.filter(t).map(n),f.length||e.push(h);return l=e.filter(function(t){return!t.dup}).map(function(t){return t.node}),this.faces.remove(r),this.faces.add(p=function(){var t,n,r,e=[];for(t=0,r=(n=l).length;r>t;++t)h=n[t],e.push(new Convex.face(this,h.concat([this.idx]),!0));return e}.call(this)),p.forEach(function(t){return x.pts.forEach(function(n){return t.front(n)?x.setPair(t,n):void 0})}),this.idx++}}}),Convex.face=function(t,n,r){var e,i,o=this;return null==r&&(r=!1),this.convex=t,this.idx=n,this.active=r,this.pts=n.map(function(n){return t.pts[n]}),this.norm=Aux.cross(Aux.sub(this.pts[2],this.pts[0]),Aux.sub(this.pts[1],this.pts[0])),e=["x","y","z"].reduce(function(t,n){return t+Math.pow(o.norm[n],2)},0),this.norm={x:this.norm.x/e,y:this.norm.y/e,z:this.norm.z/e},this.front=function(t){return Aux.inner(this.norm,Aux.sub(t,this.pts[0]))>0},this.center=function(){var t,n=this;return t={x:0,y:0,z:0},this.pts.map(function(r){return t.x+=r.x/n.pts.length,t.y+=r.y/n.pts.length,t.z+=r.z/n.pts.length}),t},i=Aux.inner(this.norm,Aux.sub(t.center,this.pts[0])),i>0?(["x","y","z"].forEach(function(t){return o.norm[t]=-o.norm[t]}),this.pts.reverse(),this.idx.reverse()):0===i&&(this.trivial=!0),this},import$(Convex.face.prototype,{dual:function(){var t,n,r,e,i,o,u,s,a,c,h,f,l,p,x,d,v;return this.dual.value&&this.dual.value,t=this.pts[0],n=t.x,r=t.y,e=t.z,t=this.pts[1],i=t.x,o=t.y,u=t.z,t=this.pts[2],s=t.x,a=t.y,c=t.z,h=r*(u-c)+o*(c-e)+a*(e-u),f=e*(i-s)+u*(s-n)+c*(n-i),l=n*(o-a)+i*(a-r)+s*(r-o),p=n*(o*c-a*u)+i*(a*e-r*c)+s*(r*u-o*e),x=.5*-h/l,d=.5*-f/l,v=p/l,this.dual.value={x:x,y:d,z:v},this.dual.value}}),$(document).ready(function(){var t,n,r,e,i,o,u,s,a,c,h,f;return t=50,n=function(){var n,e,i=[];for(n=0,e=t;e>n;++n)r=n,i.push({x:Math.random(),y:Math.random(),value:.01});return i}().map(function(t){return t.z=Math.pow(t.x,2)+Math.pow(t.y,2)-t.value,t}),e=n.reduce(function(t,n){return t+n.value},0),n.map(function(t){return t.value=t.value/e}),i=[{x:0,y:0,boundary:!0},{x:0,y:1,boundary:!0},{x:1,y:0,boundary:!0},{x:1,y:1,boundary:!0}].map(function(t){return t.value=0,t.z=Math.pow(t.x,2)+Math.pow(t.y,2)-t.value,t}),o=document.getElementById("svg").getBoundingClientRect(),u=o.height,s=o.height,a=d3.scale.linear().domain([0,1]).range([0,30]),c=d3.select("#svg"),h=function(){var t,r,e,i,o,u,h,l,p,x,d,v,y;for(t=f.polygons,r=60,i=[],o=0;r>o;++o)u=o,i.push({x:1*(.5+.7*Math.cos(2*Math.PI*u/r)),y:1*(.5+.7*Math.sin(2*Math.PI*u/r))});return e=i,t=t.map(function(t){var n;return n=PolygonIntersect(e,t),n.cx=t.cx,n.cy=t.cy,n}),h=t.map(function(t,r){var e;return e={x:t.cx,y:t.cy},e.value=n[r].value,e}),l=d3.extent(h.map(function(t){return t.x})),p=d3.extent(h.map(function(t){return t.y})),x=d3.scale.linear().domain(l.map(function(t){return 2*t})).range([0,s]),d=d3.scale.linear().domain(p.map(function(t){return 2*t})).range([s,0]),v=c.selectAll("path.voronoi").data(f.polygons),v.enter().append("path").attr({"class":"voronoi"}),v.exit().remove(),c.selectAll("path.voronoi").attr({d:function(t){var n;return t.length?["M"+x(t[0].x)+" "+d(t[0].y)].concat(function(){var r,e,i=[];for(r=1,e=t.length;e>r;++r)n=r,i.push("L"+x(t[n].x)+" "+d(t[n].y));return i}(),["L"+x(t[0].x)+" "+d(t[0].y)].join(" ")):""},fill:"rgba(0,0,0,0.1)",stroke:"#000"}).on("mouseover",function(){return d3.select(this).attr({fill:"rgba(0,0,0,0.5)"})}).on("mouseout",function(){return d3.select(this).attr({fill:"rgba(0,0,0,0.1)"})}).on("click",function(t,n){return console.log(n)}),y=c.selectAll("circle.site").data(h),y.enter().append("circle").attr({"class":"site"}),y.exit().remove(),c.selectAll("circle.site").attr({cx:function(t){return x(t.x)},cy:function(t){return d(t.y)},r:function(t){return a(t.value)},fill:"none",stroke:"#000",opacity:function(){return 1}})},console.log("x/y range:",d3.extent(n.map(function(t){return t.x})),d3.extent(n.map(function(t){return t.y}))),f=new Convex(n),f.calculate(),h(),setInterval(function(){return f=new Convex(n),f.calculate(),h()},500)});