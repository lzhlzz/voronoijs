function import$(t,i){var r={}.hasOwnProperty;for(var n in i)r.call(i,n)&&(t[n]=i[n]);return t}function in$(t,i){for(var r=-1,n=i.length>>>0;++r<n;)if(t===i[r])return!0;return!1}Voronoi.Convex=function(t){function i(t){return l.center[t]=[0,1,2,3].reduce(function(i,r){return i+l.pts[o[r]][t]},0)/4}function r(t){return t.map(function(t){return o[t]})}function n(t){return t.trivial}function e(t,i){var r;return r=Aux.sub(l.center,l.pts[t]),["x","y","z"].reduce(function(t,i){return t+Math.pow(r[i],2)},0),[r,i]}function s(t,i){return t[0]-i[0]}var h,o,u,f,a,c,p,l=this;if(this.pts=t,this.polygons=[],this.edges={},this.pair={f2p:{},p2f:{}},this.faces.list=[],!(this.pts.length<4)){for(h=[[0,1,2,3],3],o=h[0],this.idx=h[1];this.idx<this.pts.length;){for(this.idx++,this.center={},["x","y","z"].map(i),f=[],a=0,c=(h=[[0,1,2],[0,1,3],[0,2,3],[1,2,3]].map(r)).length;c>a;++a)p=h[a],f.push(new Voronoi.face(this,p));if(u=f,!u.filter(n).length)break;p=o.map(e).sort(s)[0][1],o.splice(o.indexOf(p),1),o.push(this.idx)}return this.faces.add(u),u.forEach(function(t,i){return l.pts.forEach(function(r,n){return t.front(r)?l.setPair(i,n,t,r):void 0})}),this}},import$(Voronoi.Convex.prototype,{getPairByPtr:function(t){return this.pair.p2f[t]||[]},getPairByFace:function(t){return this.pair.f2p[t]||[]},setPair:function(t,i,r,n){var e,s;return((e=(s=this.pair).f2p||(s.f2p={}))[t]||(e[t]=[])).push(n),((e=(s=this.pair).p2f||(s.p2f={}))[i]||(e[i]=[])).push(r)},faces:{contain:function(t){return in$(t,this.list)},add:function(t){return Array.isArray(t)?this.list=this.list.concat(t):this.list.push(t)},remove:function(t){var i=this;return Array.isArray(t)||(t=[t]),t.forEach(function(t){var r;return r=i.list.indexOf(t),r>=0?i.list.splice(r,1):void 0})}},polygonReorder:function(t){var i,r,n,e;return i=t.reduce(function(t,i){return t+i.x},0)/t.length,r=t.reduce(function(t,i){return t+i.y},0)/t.length,n=Math.pow(i,2)+Math.pow(r,2),e=function(t){var e,s,h;return e=Math.sqrt(n*(Math.pow(t.x-i,2)+Math.pow(t.y-r,2))),s=Math.acos((-i*(t.x-i)-r*(t.y-r))/e),h=Math.acos((r*(t.x-i)-i*(t.y-r))/e),h>Math.PI/2&&(s=6.28-s),s},t.sort(function(t,i){return e(t)-e(i)})},grid:function(){function t(t,i){return t+i.x}function i(t,i){return t+i.y}var r,n,e,s,h,o,u,f,a,c,p,l,d,g,x;for(this.faces.list.forEach(function(t){return t.center=t.getCenter(),t}),this.faces.list=this.faces.list.filter(function(t){return!t.removed&&t.front(t.center)}),this.polygons=[],r=0,e=(n=this.pts).length;e>r;++r)s=n[r],s.visited=!1;for(h=[],r=0,e=(n=this.faces.list).length;e>r;++r)for(o=n[r],u=0,a=(f=o.idx).length;a>u;++u)if(s=f[u],!in$(s,h)){for(h.push(s),c=[],c.idx=s,p=0,d=(l=this.faces.list).length;d>p;++p)g=p,x=l[p],in$(s,x.idx)&&c.push(x.dual());this.polygonReorder(c),c.cx=c.reduce(t,0)/c.length,c.cy=c.reduce(i,0)/c.length,this.pts[s].boundary&&(c.boundary=!0),this.polygons.push(c)}return console.log(this.e1,this.e2,this.e3)},calculate:function(){for(;this.idx<this.pts.length;)this.iterate();return this.grid()},iterate:function(){var t,i,r,n,e,s,h,o,u,f,a,c,p,l,d,g,x,v,y,m,w,M;if(t=(new Date).getTime(),!(this.idx>=this.pts.length)){for(i=this.getPairByPtr(this.idx),r=[],n=0,e=i.length;e>n;++n)if(s=i[n],!s.removed)for(h=0,u=(o=s.edges).length;u>h;++h)f=o[h],f.ref?f.dup=!0:r.push(f),f.ref++;return a=r.filter(function(t){return t.ref<2}),i.map(function(t){return t.removed=!0}),c=(new Date).getTime(),this.faces.add(p=function(){var t,i,r,n=[];for(t=0,r=(i=a).length;r>t;++t)f=i[t],n.push(new Voronoi.face(this,f.concat([this.idx]),!0));return n}.call(this)),o=[this.pts,this.pair,this.idx,this.faces.list.length,this.pts.length,p.length],l=o[0],d=o[1],g=o[2],x=o[3],v=o[4],y=o[5],m=(new Date).getTime(),p.forEach(function(t,i){var r,n,e,s,h,o=[];for(i+=x-y,r=g+1,n=v;n>r;++r)e=r,s=l[e],t.front(s)&&(((h=d.f2p)[i]||(h[i]=[])).push(s),o.push(((h=d.p2f)[e]||(h[e]=[])).push(t)));return o}),this.idx++,w=(new Date).getTime(),this.e1=(null!=(M=this.e1)?M:0)+(c-t),this.e2=(null!=(M=this.e2)?M:0)+(m-c),this.e3=(null!=(M=this.e3)?M:0)+(w-m)}}});