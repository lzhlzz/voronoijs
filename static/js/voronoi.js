var Voronoi,Aux;Voronoi={},Aux={inner:function(t,o){return t.x*o.x+t.y*o.y+t.z*o.z},sub:function(t,o){return{x:t.x-o.x,y:t.y-o.y,z:t.z-o.z}},cross:function(t,o){return{x:t.y*o.z-t.z*o.y,y:t.z*o.x-t.x*o.z,z:t.x*o.y-t.y*o.x}}},Voronoi.Treemap=function(t,o,n,i,e){var r,s,h,a,u,p;for(null==e&&(e=0),this.root=t,this.omega=o,this.width=n,this.height=i,r=[],s=0,a=(h=t.children).length;a>s;++s)u=h[s],r.push((u.x=Math.random()*n,u.y=Math.random()*i,u.lv=e,u));for(this.sites=r,this.boundmap=new Voronoi.Boundmap(this.sites,o,n,i),this.boundmap.compute(),this.treemap=[],s=0,a=(h=t.children).length;a>s;++s)p=s,u=h[s],u.children&&this.treemap.push(new Voronoi.Treemap(u,this.boundmap.polygons[p],n,i,e+1));return this},Voronoi.Treemap.prototype={compute:function(){var t=this;return this.boundmap.compute(),this.treemap.forEach(function(o,n){return o.setOmega(t.boundmap.polygons[n]),o.compute()})},getSites:function(){var t;return[this.boundmap.sites].concat([function(){var o,n=[];for(o=0;4>o;++o)t=o,n.push({boundary:!0});return n}()],this.treemap.map(function(t){return t.getSites()})).reduce(function(t,o){return t.concat(o)},[])},getPolygons:function(){return[this.boundmap.polygons].concat(this.treemap.map(function(t){return t.getPolygons()})).reduce(function(t,o){return t.concat(o)},[])},setOmega:function(t){return this.omega=t,this.boundmap=new Voronoi.Boundmap(this.sites,t,this.width,this.height)}},Voronoi.Boundmap=function(t,o,n,i){return this.sites=t,this.omega=o,this.width=n,this.height=i,this.powerbox=new Voronoi.PowerDiagram(t,n,i),this.powerbox.compute(),this.clip(),this},Voronoi.randomSite=function(t,o,n,i){var e;return function(){var r,s,h=[];for(r=0,s=t;s>r;++r)e=r,h.push({x:o*Math.random(),y:n*Math.random(),value:1+Math.random()*i});return h}().map(function(t){return t.weight=t.value,t})},Voronoi.Boundmap.prototype={clip:function(){var t=this;return this.polygons=this.powerbox.convex.polygons.map(function(o){return o?Voronoi.Polygon.intersect(t.omega,o):[]}),this.centroids=this.polygons.map(function(t){return t?Voronoi.Polygon.centroid(t):{x:null,y:null}})},adoptPos:function(){var t,o,n,i,e,r,s,h,a,u,p,c,g,l,y,m=[];for(t={sites:this.sites,centroids:this.centroids,polygons:this.polygons},o=t.sites,n=t.centroids,i=t.polygons,e=0,r=n.length-4;r>e;++e)s=e,o[s]&&i[s].length&&!o[s].boundary&&(o[s].x=n[s].x,o[s].y=n[s].y);for(e=0,r=n.length-4;r>e;++e)if(s=e,o[s]&&i[s].length&&!o[s].boundary){for(t=[Math.sqrt(o[s].weight),-1],h=t[0],a=t[1],u=0,p=i[s].length;p>u;++u)c=u,t=[i[s][c],i[s][(c+1)%i[s].length]],g=t[0],l=t[1],y=1.5*Math.abs(((l.y-g.y)*o[s].x-(l.x-g.x)*o[s].y+l.x*g.y-l.y*g.x)/Math.sqrt(Math.pow(l.y-g.y,2)+Math.pow(l.x-g.x,2))),(-1===a||a>y)&&(a=y);h=Math.pow(Math.min(h,a),2),m.push(o[s].weight=h)}return m},resetWeight:function(){return this.sites.forEach(function(t){return t.weight=t.pvalue=t.value})},adoptWeight:function(){var t,o,n,i,e,r,s,h,a,u,p,c,g,l,y,m,d,f,x=[];for(t={sites:this.sites,centroids:this.centroids,polygons:this.polygons},o=t.sites,n=t.centroids,i=t.polygons,e=0,o.forEach(function(t){return e+=t.value,t.pvalue!==t.value&&(t.weight=t.value),t.pvalue=t.value}),r=Voronoi.Polygon.area(this.omega),s=0,h=n.length-4;h>s;++s)if(a=s,o[a]&&i[a].length&&!o[a].boundary){for(u=r*o[a].value/e,p=Polygon.area(i[a]),c=Math.sqrt(o[a].weight),g=Math.sqrt(o[a].weight)*u/p,c=.1*(g-c)+c,l=-1,y=0,m=n.length-4;m>y;++y)d=y,a!==d&&this.polygons[d]&&(f=Math.sqrt(Math.pow(n[d].x-o[a].x,2)+Math.pow(n[d].y-o[a].y,2)),(-1===l||l>f)&&(l=f));c=Math.pow(Math.min(c,l),2),c<this.powerbox.epsilon&&(c=this.powerbox.epsilon),x.push(o[a].weight=c)}return x},compute:function(){return this.adoptPos(),this.powerbox=new Voronoi.PowerDiagram(this.sites,this.width,this.height),this.powerbox.compute(),this.clip(),this.adoptWeight(),this.powerbox=new Voronoi.PowerDiagram(this.sites,this.width,this.height),this.powerbox.compute(),this.clip()}},Voronoi.PowerDiagram=function(t,o,n){var i=this;return this.sites=t,this.width=o,this.height=n,this.boundary=[{x:-o,y:-n,boundary:!0},{x:-o,y:2*n,boundary:!0},{x:2*o,y:-n,boundary:!0},{x:2*o,y:2*n,boundary:!0}].map(function(t){return t.boundary=!0,t.weight=i.epsilon,t.value=i.epsilon,t}),this.convex=new Voronoi.Convex(JSON.parse(JSON.stringify(t.concat(this.boundary)))),this},Voronoi.PowerDiagram.prototype={epsilon:1e-10,compute:function(){return this.convex.calculate()}};